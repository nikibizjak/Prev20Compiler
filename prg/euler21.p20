fun sumOfDivisors(n: integer): integer = {
    upperLimit = (n / 2) + 1;
    i = 2;
    sum = 1;
    while (i < n) do {
        if (n % i == 0) then {
            sum = sum + i;
        } else { none; };
        i = i + 1;
    };
    sum;
} where {
    var i: integer
    var sum: integer
    var upperLimit: integer
}

fun isAmicable(n: integer): boolean = {
    otherNumber = sumOfDivisors(n);
    (n != otherNumber) & (n == sumOfDivisors(otherNumber));
} where {
    var otherNumber: integer
}

fun main(): integer = {
    i = 2;
    sum = 0;

    while (i < 1000) do {
        if (isAmicable(i)) then {
            sum = sum + i;
        } else { none; };
        i = i + 1;
    };

    sum;
} where {
    var i: integer
    var otherNumber: integer
    var sum: integer
}